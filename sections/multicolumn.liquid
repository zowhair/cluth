{{ 'section-multicolumn.css' | asset_url | stylesheet_tag }}
{{ 'component-slider.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

{%- liquid
  assign columns_mobile_int = section.settings.columns_mobile | plus: 0
  assign show_mobile_slider = false
  if section.settings.swipe_on_mobile and section.blocks.size > columns_mobile_int
    assign show_mobile_slider = true
  endif
-%}

<div class="multicolumn color-{{ section.settings.color_scheme }} gradient{% unless section.settings.background_style == 'none' and settings.text_boxes_border_thickness > 0 or settings.text_boxes_shadow_opacity > 0 %} background-{{ section.settings.background_style }}{% endunless %}{% if section.settings.title_sec == blank %} no-heading{% endif %}">
  <div
    class="section-{{ section.id }}-padding isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    {% if settings.animations_reveal_on_scroll %}
      data-cascade
    {% endif %}
  >
    {%- unless section.settings.title_sec == blank -%}
      <div class="title-wrapper-with-link title-wrapper--self-padded-mobile title-wrapper--no-top-margin">
        <h2 style="color: {{ section.settings.color_title_id }};" class="title inline-richtext {{ section.settings.heading_size }}">
          {{ section.settings.icon_id }}
          {{ section.settings.title_sec }}
        </h2>
        {%- if section.settings.button_label != blank and show_mobile_slider -%}
          <a href="{{ section.settings.button_link }}" class="link underlined-link large-up-hide">
            {{- section.settings.button_label | escape -}}
          </a>
        {%- endif -%}
      </div>
    {%- endunless -%}
    <slider-component class="slider-mobile-gutter">
      <ul
        class="multicolumn-list contains-content-container grid grid--{{ section.settings.columns_mobile }}-col-tablet-down grid--{{ section.settings.columns_desktop }}-col-desktop{% if show_mobile_slider %} slider slider--mobile grid--peek{% endif %}{% if section.settings.enable_masonry %} masonry-v2{% endif %}"
        id="Slider-{{ section.id }}"
        role="list"
        {% if section.settings.enable_masonry %}
        style="--masonry-columns:{{ section.settings.masonry_columns }};
              --masonry-height:{{ section.settings.masonry_default_height }}px;
              --masonry-gap:{{ section.settings.masonry_gap }}px;"
        {% endif %}
      >
        {%- liquid
          assign highest_ratio = 0
          for block in section.blocks
            if block.settings.image.aspect_ratio > highest_ratio
              assign highest_ratio = block.settings.image.aspect_ratio
            endif
          endfor
        -%}
        {%- for block in section.blocks -%}
          {%- assign empty_column = '' -%}
          {%- if block.settings.image == blank
            and block.settings.title_block == blank
            and block.settings.text == blank
            and block.settings.link_label == blank
          -%}
            {%- assign empty_column = ' multicolumn-list__item--empty' -%}
          {%- endif -%}

          <li
            id="Slide-{{ section.id }}-{{ forloop.index }}"
            class="multicolumn-list__item {% if section.settings.column_alignment == 'center' %} center{% endif %}{{ empty_column }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %} item"
            {{ block.shopify_attributes }}
            {% if settings.animations_reveal_on_scroll %}
              {% capture style_here %}--animation-order: {{ forloop.index }};{% endcapture %}
              {% if section.settings.enable_masonry %}
                {% capture style_here %}
                  {{style_here}}
                  --col-span:{{block.settings.col_span}};
                  --row-span:{{block.settings.row_span}};
                {% endcapture %}
              {% endif %}
              data-cascade
              style="{{style_here}}"
            {% elsif section.settings.enable_masonry %}
              style="--col-span:{{block.settings.col_span}};
              --row-span:{{block.settings.row_span}};"
            {% endif %}
          >
            <div class="multicolumn-card content-container block_{{ block.settings.identfierclass_id }}">
              {%- if block.settings.image != blank -%}
                {% if section.settings.image_ratio == 'adapt' or section.settings.image_ratio == 'circle' %}
                  {% assign spaced_image = true %}
                {% endif %}
                <div class="multicolumn-card__image-wrapper multicolumn-card__image-wrapper--{{ section.settings.image_width }}-width{% if section.settings.image_width != 'full' or spaced_image %} multicolumn-card-spacing{% endif %}">
                  <div
                    class="media media--transparent media--{{ section.settings.image_ratio }}"
                    
                  >
                    {%- liquid
                      assign number_of_columns = section.settings.columns_desktop
                      assign number_of_columns_mobile = section.settings.columns_mobile
                      assign grid_space_desktop = number_of_columns | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_tablet = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | plus: 100 | append: 'px'
                      assign grid_space_mobile = number_of_columns_mobile | minus: 1 | times: settings.spacing_grid_horizontal | divided_by: 2 | plus: 30 | append: 'px'
                      if section.settings.image_width == 'half'
                        assign image_width = 0.5
                      elsif section.settings.image_width == 'third'
                        assign image_width = 0.33
                      else
                        assign image_width = 1
                      endif
                    -%}

                    {% assign max_width = 'max-width:' | append:  block.settings.image_width | append: 'px;' %}
                    {{
                      block.settings.image
                      | image_url: width: block.settings.image_width
                      | image_tag:
                        loading: 'lazy',
                        class: 'multicolumn-card__image',
                        style: max_width
                    }}

                  </div>
                  {% if block.settings.image_for_mobile != blank %}
                    <div class="container_image_mobile">
                      {{
                        block.settings.image_for_mobile
                        | image_url: width: 400
                        | image_tag:
                          loading: 'lazy',
                          class: 'multicolumn-card__image_mobile'
                      }}
                    </div>
                  {% endif %}
                
                </div>
              {%- endif -%}

              {% assign content_position = block.settings.content_position %}

              <div class="multicolumn-card__info {% if content_position == "top-lef" %}
              top-lef {% elsif content_position == "top-center" %} top-center {% elsif content_position == "top-right" %}
              top-right {% elsif content_position == "middle-left" %} middle-left {% elsif content_position == "middle-center" %} middle-center {% elsif content_position == "middle-right" %} middle-right {% elsif content_position == "bottom-left" %} bottom-left {% elsif content_position == "bottom-center" %} bottom-center {% elsif content_position == "bottom-right" %} bottom-right {% endif %} ">
                {%- if block.settings.title_block != blank -%}
                  <h3 class="inline-richtext">{{ block.settings.title_block }}</h3>
                {%- endif -%}
                {%- if block.settings.text != blank -%}
                  <div class="rte">{{ block.settings.text }}</div>
                {%- endif -%}
                {%- if block.settings.link_label != blank -%}
                  <a style="background: {{ block.settings.button_background }}; color: {{ block.settings.color_button }};"
                    class="link animate-arrow"
                    {% if block.settings.link == blank %}
                      role="link" aria-disabled="true"
                    {% else %}
                      href="{{ block.settings.link }}"
                    {% endif %}
                  >
                    {{- block.settings.link_label | escape -}}
                  </a>  
                {%- endif -%}
              </div>
            </div>
          </li>
        {%- endfor -%}
      </ul>

      {%- if show_mobile_slider -%}
        <div class="slider-buttons no-js-hidden medium-hide">
          <button
            type="button"
            class="slider-button slider-button--prev"
            name="previous"
            aria-label="{{ 'general.slider.previous_slide' | t }}"
          >
            {% render 'icon-caret' %}
          </button>
          <div class="slider-counter caption">
            <span class="slider-counter--current">1</span>
            <span aria-hidden="true"> / </span>
            <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
            <span class="slider-counter--total">{{ section.blocks.size }}</span>
          </div>
          <button
            type="button"
            class="slider-button slider-button--next"
            name="next"
            aria-label="{{ 'general.slider.next_slide' | t }}"
          >
            {% render 'icon-caret' %}
          </button>
        </div>
      {%- endif -%}
    </slider-component>
    <div class="center{% if show_mobile_slider %} small-hide medium-hide{% endif %}">
      {%- if section.settings.button_label != blank -%}
        <a
          class="button button--primary"
          {% if section.settings.button_link == blank %}
            role="link" aria-disabled="true"
          {% else %}
            href="{{ section.settings.button_link }}"
          {% endif %}
        >
          {{ section.settings.button_label | escape }}
        </a>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.multicolumn.name",
  "class": "section ab-homepage",
  "tag": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "html",
      "id": "icon_id",
      "label": "Icon for title",
      "info": "SVG icon"
    },
    {
      "type": "text",
      "id": "title_sec",
      "default": "Multicolumn",
      "label": "t:sections.multicolumn.settings.title.label"
    },
    {
      "type": "color",
      "id": "color_title_id",
      "label": "Color title"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "select",
      "id": "image_width",
      "options": [
        {
          "value": "third",
          "label": "t:sections.multicolumn.settings.image_width.options__1.label"
        },
        {
          "value": "half",
          "label": "t:sections.multicolumn.settings.image_width.options__2.label"
        },
        {
          "value": "full",
          "label": "t:sections.multicolumn.settings.image_width.options__3.label"
        }
      ],
      "default": "full",
      "label": "t:sections.multicolumn.settings.image_width.label"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.multicolumn.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.multicolumn.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.multicolumn.settings.image_ratio.options__3.label"
        },
        {
          "value": "circle",
          "label": "t:sections.multicolumn.settings.image_ratio.options__4.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.multicolumn.settings.image_ratio.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "t:sections.multicolumn.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "column_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.multicolumn.settings.column_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.multicolumn.settings.column_alignment.options__2.label"
        }
      ],
      "default": "left",
      "label": "t:sections.multicolumn.settings.column_alignment.label"
    },
    {
      "type": "select",
      "id": "background_style",
      "options": [
        {
          "value": "none",
          "label": "t:sections.multicolumn.settings.background_style.options__1.label"
        },
        {
          "value": "primary",
          "label": "t:sections.multicolumn.settings.background_style.options__2.label"
        }
      ],
      "default": "primary",
      "label": "t:sections.multicolumn.settings.background_style.label"
    },
    {
      "type": "text",
      "id": "button_label",
      "default": "Button label",
      "label": "t:sections.multicolumn.settings.button_label.label"
    },
    {
      "type": "url",
      "id": "button_link",
      "label": "t:sections.multicolumn.settings.button_link.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "t:sections.multicolumn.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.multicolumn.settings.columns_mobile.options__2.label"
        }
      ],
      "default": "1",
      "label": "t:sections.multicolumn.settings.columns_mobile.label"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "t:sections.multicolumn.settings.swipe_on_mobile.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    },
    {
      "type": "header",
      "content": "Masonry Effect Desktop"
    },
    {
      "type": "checkbox",
      "id": "enable_masonry",
      "label": "Enable masonry on desktop",
      "default": false
    },
    {
      "type": "range",
      "id": "masonry_columns",
      "label": "Columns",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 4
    },
    {
      "type": "range",
      "id": "masonry_default_height",
      "label": "Default height",
      "min": 200,
      "max": 400,
      "step": 2,
      "default": 292
    },
    {
      "type": "range",
      "id": "masonry_gap",
      "label": "Masonry gap",
      "min": 8,
      "max": 64,
      "step": 8,
      "default": 16
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "t:sections.multicolumn.blocks.column.name",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "t:sections.multicolumn.blocks.column.settings.image.label"
        },
        {
          "type": "image_picker",
          "id": "image_for_mobile",
          "label": "Image mobile"
        },
        {
            "type": "range",
            "id": "image_width",
            "min": 100,
            "max": 800,
            "step": 10,
            "default": 400,
            "label": "Image width"
        },
        {
            "type": "select",
            "id": "content_position",
            "options": [
            {
                "value": "top-left",
                "label": "Top Left"
            },
            {
                "value": "top-center",
                "label": "Top Center"
            },
            {
                "value": "top-right",
                "label": "Top Right"
            },
            {
                "value": "middle-left",
                "label": "Middle Left"
            },
            {
                "value": "middle-center",
                "label": "Middle Center"
            },
            {
                "value": "middle-right",
                "label": "Middle Right"
            },
            {
                "value": "bottom-left",
                "label": "Bottom Left"
            },
            {
                "value": "bottom-center",
                "label": "Bottom Center"
            },
            {
                "value": "bottom-right",
                "label": "Bottom Right"
            }
        ],
        "default": "middle-center",
        "label": "Desktop content position"
        },
        {
          "type": "text",
          "id": "title_block",
          "label": "t:sections.multicolumn.blocks.column.settings.title.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Pair text with an image to focus on your chosen product, collection, or blog post. Add details on availability, style, or even provide a review.</p>",
          "label": "t:sections.multicolumn.blocks.column.settings.text.label"
        },
        {
          "type": "text",
          "id": "link_label",
          "label": "t:sections.multicolumn.blocks.column.settings.link_label.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.multicolumn.blocks.column.settings.link.label"
        },
        {
            "type": "color",
            "id": "button_background",
            "label": "Background button",
            "default": "#4DACE1"
        },
        {
            "type": "color",
            "id": "color_button",
            "label": "Color button",
            "default": "#141414"
        },
        {
          "type": "text",
          "id": "identfierclass_id",
          "label": "Custom class"
        },
        {
          "type": "header",
          "content": "Masonry properties"
        },
        {
          "type": "range",
          "id": "col_span",
          "label": "Col span",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 1
        },
        {
          "type": "range",
          "id": "row_span",
          "label": "Row span",
          "min": 1,
          "max": 10,
          "step": 1,
          "default": 1
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.multicolumn.presets.name",
      "blocks": [
        {
          "type": "column"
        },
        {
          "type": "column"
        },
        {
          "type": "column"
        }
      ]
    }
  ]
}
{% endschema %}



